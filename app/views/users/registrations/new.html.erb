
<div id='pageBody' class="with-header">
  <div id="loginForm" class="col col-10 offset-1">
    
      
    <h2>Sign up</h2>

    <%= form_for(resource, as: resource_name, url: registration_path(resource_name), :html => {:class => 'd-flex flex-column mt-3'}) do |f| %>
      <%= render "devise/shared/error_messages", resource: resource %>

      <div class="field">
        <%= f.email_field :email, autofocus: true, autocomplete: "email", placeholder: "Email" %>
      </div>

      
      <div class="field">
        <%= f.text_field :fname, autofocus: true, autocomplete: "First Name", placeholder:"First Name" %>
      </div>

      <div class="field">
        <%= f.text_field :lname, autofocus: true, autocomplete: "Last Name", placeholder: "Last Name" %>
      </div>

      <div class="field">
          <%= f.text_field :sex, autofocus: true, autocomplete: "Sex", placeholder: "Sex" %>
        </div>
  
      <div class="field">
        <%= f.date_field :dtbirth, autofocus: true, autocomplete: "Date of Birth", placeholder: "Date" %>
      </div>

      <div class="field">
        <%= f.password_field :password, autocomplete: "new-password", placeholder: "New Password" %>
      </div>

      <% if @minimum_password_length %>
        <em><small>(<%= @minimum_password_length %> characters minimum)</small></em>
      <% end %>

      <div class="field">
        <%= f.password_field :password_confirmation, autocomplete: "new-password", placeholder: "Confirm Password" %>
      </div>

      <div class="actions  mt-3 mb-3">
        <%= f.submit "Sign up" , class:"btn my-button filled invert" , data: { disable_with: false} %>
      </div>
    <% end %>
    <%= render "users/shared/links" %>
  </div>
</div>


<script>



function validateForm(evt){
    evt.preventDefault();
    let errors = []
    if (document.querySelector('#user_email').value === '') {
      errors.push('Please insert an email')    

    } 
    if (document.querySelector('#user_fname').value === '') {
      errors.push('Please insert the first name')    

    } 
    if (document.querySelector('#user_lname').value === '') {
      errors.push('Please insert the last name')    

    } 
    if (document.querySelector('#user_sex').value === '') {
      errors.push('Please insert the sex')    

    } 
    if (document.querySelector('#user_dtbirth').value === '') {
      errors.push('Please insert the date of birth')    

    } 
    if (document.querySelector('#user_password').value === '') {
      errors.push('Please insert a password')    

    } else if (document.querySelector('#user_password_confirmation').value === '') {
      errors.push('Please confirm password')    

    } else if (document.querySelector('#user_password_confirmation').value != document.querySelector('#user_password').value) {
      errors.push('Passwords don\'t match')    

    } 



    if (errors.length > 0) {
      let errList;
      let item;
      errors.forEach((elmnt) => {

        item = document.createElement('li')
        errList = document.querySelector('#errors-tootip ul')
        item.appendChild(document.createTextNode(elmnt))
        errList.appendChild(item)
      })
      errList.parentElement.classList.add('err-show')
       setTimeout(() => {
         errList.parentElement.classList.remove('err-show')
         setTimeout(() => {
           while (errList.firstChild) {
             errList.firstChild.remove()
           }
         }, 1100)
       }, 5000)
    }else{
      evt.target.submit();
    }
  }



  document.querySelector('form').addEventListener('submit', validateForm)
  </script>